class Solution {
    public int solve(int []nums,int index,int dp[]){
        if(index==0){
            return nums[0];
        }
        if(index<0)
        return 0;
       if(dp[index]!=-1){
           return dp[index];
       }
        int k1=nums[index]+solve(nums,index-2,dp);  // he can not rob two adjucent house so he will wove to index-2 after robbing to index .
       int k2=0+solve(nums,index-1,dp);              // if he is not robbing to current index then he can rob to index-1 .
       
       return dp[index]=Math.max(k1,k2);
    }
    public int rob(int[] nums) {
       
        int n=nums.length;
        int dp[]=new int[n+1];
        Arrays.fill(dp,-1);
        int k=solve(nums,n-1,dp);
        return k;
    }
}
