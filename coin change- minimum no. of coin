class Solution {
    public int coinChange(int[] coins, int sum) {
        int w=sum;
        int n=coins.length;
        int m=coins.length;
       int[][] dp = new  int[n+1][w+1];
       for(int i=0 ;i<n+1;i++){
           for(int j=0 ;j<w+1 ;j++){
               if(i==0){
			 
                   dp[i][j]=Integer.MAX_VALUE -1;
               }
               else if(i==1){
                   if(j%coins[0]==0)
                       dp[i][j]=j/coins[0];
                   else
                       dp[i][j]=Integer.MAX_VALUE-1;
               }
           }
       }
          for(int i=2 ;i<n+1;i++){
           for(int j=1 ;j<w+1 ;j++){
               if(coins[i-1]<=j){
                   dp[i][j]= Math.min(1 + dp[i][j-coins[i-1]] , dp[i-1][j]);
               }
               else{
                   dp[i][j]= dp[i-1][j];
               }
           }
       }

          

       if(dp[n][w] == Integer.MAX_VALUE-1)
    {
        return -1;
    }
    else
    {
        return dp[n][w];
    }
     }

}
