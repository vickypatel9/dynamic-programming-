
// only two transaction is allowed 
// k=2;
//bs is representing weather we are allowed t0 buy or sell or not .
// bs=1 aloow buy/sell only, bs=0 not allow to sell/buy .

class Solution {
    int[][][] ans;
    public int maxProfit(int[] prices) {
        ans = new int[3][prices.length+1][3];
        for(int[][] k:ans)
            for(int[] l:k)
                Arrays.fill(l,-1);
        return rec(2,prices,0,1);
    }
    int rec(int k,int[] prices, int n,int bs)
    {
        if(k==0) return 0;
        if(n==prices.length) return 0;
        if(ans[k][n][bs]!=-1) return ans[k][n][bs];

        // he can only buy
        if(bs==1)
        {
            ans[k][n][bs]= Math.max(rec(k,prices,n+1,bs-1)-prices[n],rec(k,prices,n+1,bs));       
           
        }
        else
        {
            ans[k][n][bs] = Math.max(rec(k-1,prices,n+1,bs+1)+prices[n],rec(k,prices,n+1,bs));
            
        }
         return ans[k][n][bs];    
    }
}
