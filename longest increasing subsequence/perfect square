//Given an integer n, return the least number of perfect square numbers that sum to n.

A perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself.

--------------------------------------- method 1 ------------------------------------------
class Solution {
    public int solve(int n,int[]dp){
        if(n==0||n==1)
        return n;
         if(dp[n]!=-1)
         return dp[n];
        int k=n;
        for(int i=1;i*i<=n;i++){
            int temp=i*i;
            k=Math.min(k,1+solve(n-temp,dp));
            
        }
        return dp[n]=k;
    }
    public int numSquares(int n) {
        int []dp=new int [n+1];
        Arrays.fill(dp,-1);
       return solve(n,dp);
    }
}

-----------------------------------------------method -2 --------------------------------------------


class Solution {
 
    public int numSquares(int n) {
        int []dp=new int [n+1];
        dp[0]=0;
        dp[1]=1;
        for(int i=2;i<=n;i++){
          int min=Integer.MAX_VALUE;
          for(int j=1;j*j<=i;j++){             // trying all possibity to fom number i  and selecting minimum of them.
               int rem=i-j*j;
               if(dp[rem]<min){
                   min=dp[rem];
               }
          }
           dp[i]=min+1;
        }
      return dp[n];
    }
}
