example 1:- 

Input: word1 = "horse", word2 = "ros"
Output: 3
Explanation: 
horse -> rorse (replace 'h' with 'r')
rorse -> rose (remove 'r')
rose -> ros (remove 'e')

class Solution {
    private int f(int i, int j, String word1, String word2, int[][] dp) {
        // Base case of 1 based indexing .
        if (i == 0) return j;
        if (j == 0) return i;
        if (dp[i][j] != -1) return dp[i][j];
        
        if (word1.charAt(i-1) == word2.charAt(j-1)) 
            return dp[i][j] = f(i-1, j-1, word1, word2, dp);

        return dp[i][j] = 1+ Math.min(f(i, j-1, word1, word2, dp), // Insertion
                          Math.min(f(i-1, j, word1, word2, dp), // Deletion 
                          f(i-1, j-1, word1, word2, dp))); // Replace
    }

    public int minDistance(String word1, String word2) {
        int n = word1.length();
        int m = word2.length();
        int[][] dp = new int[n+1][m+1];
        for (int[] row : dp) Arrays.fill(row, -1);

        return f(n, m, word1, word2, dp);
    }
}
