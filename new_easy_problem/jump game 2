


Return the minimum number of jumps to reach nums[n - 1]. The test cases are generated such that you can reach nums[n - 1].

 

Example 1:

Input: nums = [2,3,1,1,4]
Output: 2
Explanation: The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.



class Solution {
    public int jump(int[] nums) {
        int[] dp = new int[nums.length];
        Arrays.fill(dp, Integer.MAX_VALUE);
        dp[0] = 0;
        for(int i = 0; i < nums.length; i++) {
            for(int j = 0; j <= nums[i] && i + j < nums.length; j++) {
                dp[i+j] = Math.min(dp[i+j], dp[i] + 1);                
            }
        }
        return dp[nums.length - 1];
    }
}
